package main

import (
	"log"
	"net/http"
	"os"
	"sync"

	"github.com/gin-gonic/gin"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/joho/godotenv"
)

var (
	subscribers = make(map[int64]bool) // üîπ –°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	mu          sync.Mutex             // üîê –ó–∞—â–∏—Ç–∞ –æ—Ç –≥–æ–Ω–æ–∫ –¥–∞–Ω–Ω—ã—Ö
)

func main() {
	// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
	err := godotenv.Load()
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ .env —Ñ–∞–π–ª–∞")
	}

	// –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	TelegramToken := os.Getenv("TELEGRAM_TOKEN")
	SecretWord := os.Getenv("SECRET_WORD")

	port := os.Getenv("PORT")
	if port == "" {
		port = "8080" // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
	}
	APIListenAddr := ":" + port
	log.Println("–≤—Å–µ —É—Å–ø–µ—à–Ω–æ", TelegramToken, SecretWord, APIListenAddr)
	bot, err := tgbotapi.NewBotAPI(TelegramToken)
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–æ—Ç–∞:", err)
	}

	go startTelegramBot(bot, SecretWord)     // üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ
	startAPI(bot, SecretWord, APIListenAddr) // üåç –ó–∞–ø—É—Å–∫–∞–µ–º API
}

// üì© –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
func startTelegramBot(bot *tgbotapi.BotAPI, SecretWord string) {
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ-—Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
			continue
		}

		chatID := update.Message.Chat.ID
		text := update.Message.Text

		if text == SecretWord { // üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ
			mu.Lock()
			subscribers[chatID] = true
			mu.Unlock()

			msg := tgbotapi.NewMessage(chatID, "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è!")
			bot.Send(msg)
		}
	}
}

// üåç –ó–∞–ø—É—Å–∫ API-—Å–µ—Ä–≤–µ—Ä–∞
func startAPI(bot *tgbotapi.BotAPI, SecretWord, APIListenAddr string) {
	r := gin.Default()

	// üî• API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
	r.POST("/notify", func(c *gin.Context) {
		var req struct {
			Message string `json:"message"`
		}

		if err := c.ShouldBindJSON(&req); err != nil {
			c.JSON(http.StatusBadRequest, gin.H{"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞"})
			return
		}

		mu.Lock()
		defer mu.Unlock()

		for chatID := range subscribers {
			msg := tgbotapi.NewMessage(chatID, req.Message)
			bot.Send(msg)
		}

		c.JSON(http.StatusOK, gin.H{"status": "–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"})
	})

	log.Println("üì° API –∑–∞–ø—É—â–µ–Ω –Ω–∞", APIListenAddr)
	r.Run("0.0.0.0" + APIListenAddr)
}
